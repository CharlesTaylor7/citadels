/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as DeploymentImport } from './routes/deployment'
import { Route as IndexImport } from './routes/index'
import { Route as V2LobbyImport } from './routes/v2/lobby'
import { Route as V2GameImport } from './routes/v2/game'

// Create/Update Routes

const SignupRoute = SignupImport.update({
          id: '/signup',path: '/signup',getParentRoute: () => rootRoute
        }as any)

const LoginRoute = LoginImport.update({
          id: '/login',path: '/login',getParentRoute: () => rootRoute
        }as any)

const DeploymentRoute = DeploymentImport.update({
          id: '/deployment',path: '/deployment',getParentRoute: () => rootRoute
        }as any)

const IndexRoute = IndexImport.update({
          id: '/',path: '/',getParentRoute: () => rootRoute
        }as any)

const V2LobbyRoute = V2LobbyImport.update({
          id: '/v2/lobby',path: '/v2/lobby',getParentRoute: () => rootRoute
        }as any)

const V2GameRoute = V2GameImport.update({
          id: '/v2/game',path: '/v2/game',getParentRoute: () => rootRoute
        }as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
          id: '/'
          path: '/'
          fullPath: '/'
          preLoaderRoute: typeof IndexImport
          parentRoute: typeof rootRoute
        }
'/deployment': {
          id: '/deployment'
          path: '/deployment'
          fullPath: '/deployment'
          preLoaderRoute: typeof DeploymentImport
          parentRoute: typeof rootRoute
        }
'/login': {
          id: '/login'
          path: '/login'
          fullPath: '/login'
          preLoaderRoute: typeof LoginImport
          parentRoute: typeof rootRoute
        }
'/signup': {
          id: '/signup'
          path: '/signup'
          fullPath: '/signup'
          preLoaderRoute: typeof SignupImport
          parentRoute: typeof rootRoute
        }
'/v2/game': {
          id: '/v2/game'
          path: '/v2/game'
          fullPath: '/v2/game'
          preLoaderRoute: typeof V2GameImport
          parentRoute: typeof rootRoute
        }
'/v2/lobby': {
          id: '/v2/lobby'
          path: '/v2/lobby'
          fullPath: '/v2/lobby'
          preLoaderRoute: typeof V2LobbyImport
          parentRoute: typeof rootRoute
        }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute,'/deployment': typeof DeploymentRoute,'/login': typeof LoginRoute,'/signup': typeof SignupRoute,'/v2/game': typeof V2GameRoute,'/v2/lobby': typeof V2LobbyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute,'/deployment': typeof DeploymentRoute,'/login': typeof LoginRoute,'/signup': typeof SignupRoute,'/v2/game': typeof V2GameRoute,'/v2/lobby': typeof V2LobbyRoute
}

export interface FileRoutesById {
  '__root__': typeof rootRoute,
  '/': typeof IndexRoute,'/deployment': typeof DeploymentRoute,'/login': typeof LoginRoute,'/signup': typeof SignupRoute,'/v2/game': typeof V2GameRoute,'/v2/lobby': typeof V2LobbyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/'|'/deployment'|'/login'|'/signup'|'/v2/game'|'/v2/lobby'
  fileRoutesByTo: FileRoutesByTo
  to: '/'|'/deployment'|'/login'|'/signup'|'/v2/game'|'/v2/lobby'
  id: '__root__'|'/'|'/deployment'|'/login'|'/signup'|'/v2/game'|'/v2/lobby'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute,DeploymentRoute: typeof DeploymentRoute,LoginRoute: typeof LoginRoute,SignupRoute: typeof SignupRoute,V2GameRoute: typeof V2GameRoute,V2LobbyRoute: typeof V2LobbyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,DeploymentRoute: DeploymentRoute,LoginRoute: LoginRoute,SignupRoute: SignupRoute,V2GameRoute: V2GameRoute,V2LobbyRoute: V2LobbyRoute
}

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>()


/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/deployment",
        "/login",
        "/signup",
        "/v2/game",
        "/v2/lobby"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/deployment": {
      "filePath": "deployment.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/v2/game": {
      "filePath": "v2/game.tsx"
    },
    "/v2/lobby": {
      "filePath": "v2/lobby.tsx"
    }
  }
}
ROUTE_MANIFEST_END */